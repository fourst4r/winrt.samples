package winrt.myApp.implementation;

import winrt.microsoft.ui.xaml.LaunchActivatedEventArgs;
import cxx.ConstRef;
import winrt.WinRT;
import winrt.microsoft.ui.xaml.Application;


// This class is generated by the XAML compiler from the App.xaml file.
@:valueType
@:include("App.xaml.g.h")
// @:addInclude("unknwn.h", true)
@:nativeTypeCode("AppT<{type0}>")
extern class AppT<T> extends Application {}

@:keep
@:valueType
@:filename("App.xaml")
class App extends AppT<App> {
    public function new() {
        untyped __cpp__("InitializeComponent()");
        // theres some extra shit after this to handle exceptions
    }

    override function OnLaunched(args:ConstRef<LaunchActivatedEventArgs>) {
        final window:cxx.Value<myApp.MainWindow> = cxx.Syntax.NoAssign;
        window.Activate();
    }
}

// @:headerInclude("pch.h")
// @:include("App.xaml.g.hpp")
class Main {
    static function main() {
        initApartment(MultiThreaded);
        Application.Start(p -> {
            untyped __cpp__("(void){0}", App);
            make(App);
        });
    }
}

/* 
    Sample 1: Simple HTTP GET request
*/
// import winrt.WinRT;
// import winrt.windows.foundation.Uri;
// import winrt.windows.web.http.HttpClient;
// using winrt.Extensions;

// class Main {
//     public static function main() {
//         initApartment();
//         var uri:Uri = Uri.make(toHString("http://www.contoso.com/get"));
//         var client = new HttpClient();
//         var async = client.GetStringAsync(uri);
//         var results = async.get();
//         trace(toString(results));
//     }
// }